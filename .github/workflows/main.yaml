name: Athena Pipeline



on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  VERSION: 1.21


jobs:
  test:
    name: Run test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.VERSION }}
      - name: Install dependencies
        run: go mod download
      - name: Run tests
        run: go test ./...

  migrate:
    environment: staging
    name: Run migrations
    runs-on: ubuntu-latest
    needs: test
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.VERSION }}

      - name: Install golang-migrate
        run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Run migrate
        run: migrate --path migrations --database $DATABASE_URL up

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: login docker hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_TOKEN}}
      - name: docker build
        uses: docker/setup-buildx-action@v2
        id: buildx
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./
          file: ./Dockerfile
          builder: ${{steps.buildx.outputs.name}}
          tags: ${{ secrets.DOCKER_USERNAME }}/athena
      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}

#  push:
  #    name: Push
  #    runs-on: ubuntu-latest
  #    needs: build
  #    environment: staging
  #    steps:
  #      - name: access vps
  #        uses: appleboy/ssh-action@master
  #        with:
  #          host: ${{ secrets.HOST }}
  #          username: ${{ secrets.USERNAME }}
  #          password: ${{ secrets.PASSWORD }}
  #          port: ${{ secrets.PORT }}
  #          script: |
  #            cd /home/athena/athena_service
  #            docker-compose stop
  #            docker-compose rm -f
  #            docker-compose pull
  #            docker-compose up -d
  k8s:
    name: Deploy to k8s
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: setup kubectl
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: |
            apply -f k8s/deployment.yaml

